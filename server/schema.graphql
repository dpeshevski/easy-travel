# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

type Mutation {
  confirmOrder(id: String!): Order!
  createBundle(carRentalId: String, data: ProductDTO!, flightId: String!, hotelId: String): Product!
  createOrder(data: OrderDTO!): Order!
  createProduct(data: ProductDTO!): Product!
  deleteProduct(id: String!): Boolean!
  processOrder(id: String!): Order!
  updateOrder(data: OrderDTO!, id: String!): Order!
  updateProduct(data: ProductDTO, id: String!): Product!
}

type Order {
  createdAt: DateTimeISO!
  customerName: String!
  id: ID!
  product: Product
  productId: String!
  quantity: Float!
  status: OrderStatus!
  totalPrice: Float!
  updatedAt: DateTimeISO
}

input OrderDTO {
  customerName: String!
  product: ProductDTO
  productId: String!
  quantity: Float!
  status: String
}

"""
Status for orders like pending, placed, shipped, cancelled, and completed.
"""
enum OrderStatus {
  CANCELLED
  COMPLETED
  MANUAL_CONFIRMATION
  PENDING
  PLACED
  PROCESSING
}

type Product {
  category: ProductCategory!
  createdAt: DateTimeISO
  deletedAt: DateTimeISO
  description: String!
  endDate: DateTimeISO!
  id: ID!
  location: String!
  name: String!
  price: Float!
  startDate: DateTimeISO!
  status: ProductStatus!
  updatedAt: DateTimeISO
}

"""Categories for products like flight, hotel, car rental, and bundle."""
enum ProductCategory {
  BUNDLE
  CAR_RENTAL
  FLIGHT
  HOTEL
}

input ProductDTO {
  category: ProductCategory!
  description: String!
  endDate: DateTimeISO!
  location: String!
  name: String!
  price: Float!
  startDate: DateTimeISO!
  status: ProductStatus!
}

"""The status of the product"""
enum ProductStatus {
  AVAILABLE
  UNAVAILABLE
}

type Query {
  bundles: [Product!]!
  order(id: String!): Order
  orders(status: String): [Order!]!
  product(id: String!): Product
  products(status: String): [Product!]!
  productsByCategory(category: String!): [Product!]!
}